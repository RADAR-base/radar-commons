# Continuous integration, including test and integration test
name: CI

# Run in master and dev branches and in all pull requests to those branches
on:
  push:
    branches: [ master, dev ]
  pull_request: {}

jobs:
  # Build and test the code
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      # Compile the code
      - name: Compile code
        run: ./gradlew assemble

      # Gradle check
      - name: Check
        run: ./gradlew check

      - name: Check version
        run: |
          projectVersion=$(./gradlew properties | grep '^version:.*$')
          pluginVersion=$(./gradlew :radar-commons-gradle:properties | grep '^version:.*$')
          if [ "$projectVersion" != "$pluginVersion" ]; then
            echo "Project version $projectVersion does not match plugin version $pluginVersion"
            exit 1
          fi
